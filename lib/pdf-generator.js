import jsPDF from "jspdf"

export function generatePDF(specs, recommendations) {
  const doc = new jsPDF()

  // Header
  doc.setFontSize(24)
  doc.setTextColor(16, 185, 129) // Emerald color
  doc.text("EcoPack AI", 20, 30)

  doc.setFontSize(16)
  doc.setTextColor(0, 0, 0)
  doc.text("Packaging Recommendations Report", 20, 45)

  // Product Specifications
  doc.setFontSize(14)
  doc.text("Product Specifications:", 20, 65)

  doc.setFontSize(12)
  const specText = [
    `Dimensions: ${specs.length} x ${specs.width} x ${specs.height} cm`,
    `Weight: ${specs.weight} kg`,
    `Fragility: ${specs.fragility.charAt(0).toUpperCase() + specs.fragility.slice(1)}`,
    `Product Type: ${specs.productType.charAt(0).toUpperCase() + specs.productType.slice(1)}`,
  ]

  specText.forEach((text, index) => {
    doc.text(text, 25, 80 + index * 8)
  })

  // Recommendations
  let yPosition = 120

  recommendations.forEach((rec, index) => {
    // Check if we need a new page
    if (yPosition > 220) {
      doc.addPage()
      yPosition = 30
    }

    doc.setFontSize(14)
    doc.setTextColor(16, 185, 129)
    doc.text(`Recommendation ${index + 1}: ${rec.name}`, 20, yPosition)

    yPosition += 15

    doc.setFontSize(12)
    doc.setTextColor(0, 0, 0)

    // Description
    const descLines = doc.splitTextToSize(rec.description, 170)
    doc.text(descLines, 20, yPosition)
    yPosition += descLines.length * 6 + 5

    // Scores
    doc.text(`Eco Score: ${rec.eco}/10`, 20, yPosition)
    doc.text(`Cost Score: ${rec.cost}/10`, 80, yPosition)
    yPosition += 10

    // Pricing and Supplier
    doc.setTextColor(16, 185, 129)
    doc.text(`Price: ${rec.estimatedPrice}`, 20, yPosition)
    yPosition += 8
    doc.setTextColor(0, 0, 0)
    doc.text(`Supplier: ${rec.supplierName}`, 20, yPosition)
    yPosition += 6
    doc.setTextColor(100, 100, 100)
    doc.text(`Link: ${rec.supplierLink}`, 20, yPosition)
    yPosition += 10

    // Carbon Savings
    doc.setTextColor(34, 197, 94) // Green color
    doc.text(`Carbon Savings: ≈ ${rec.carbonSavings}g CO₂ vs. plastic`, 20, yPosition)
    yPosition += 10

    // Reason
    doc.setTextColor(100, 100, 100)
    const reasonLines = doc.splitTextToSize(`Why: ${rec.reason}`, 170)
    doc.text(reasonLines, 20, yPosition)
    yPosition += reasonLines.length * 6 + 20
  })

  // Footer
  const pageCount = doc.getNumberOfPages()
  for (let i = 1; i <= pageCount; i++) {
    doc.setPage(i)
    doc.setFontSize(10)
    doc.setTextColor(150, 150, 150)
    doc.text("Generated by EcoPack AI - Built for Walmart Sparkathon 2025", 20, 285)
    doc.text(`Page ${i} of ${pageCount}`, 170, 285)
  }

  // Download the PDF
  const fileName = `ecopack-recommendations-${new Date().toISOString().split("T")[0]}.pdf`
  doc.save(fileName)
}
